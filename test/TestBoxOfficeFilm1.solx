pragma solidity ^0.4.24;

import "truffle/Assert.sol";
import "truffle/DeployedAddresses.sol";
import "../contracts/HeartBankToken.sol";
import "../contracts/BoxOffice.sol";

contract TestBoxOffice7 {

    BoxOffice boxOffice;
    uint public initialBalance = 1 ether;

    function beforeEach() public {
        HeartBankToken kiitos = new HeartBankToken();
        boxOffice = new BoxOffice(address(kiitos), DeployedAddresses.BoxOfficeOracle());
        Assert.isTrue(kiitos.addAdmin(address(boxOffice)), "should add admin");
        Assert.isTrue(boxOffice.makeFilm(now + 28 days, 1 finney, 1 ether, "title", "symbol", "logline", "ipfshash", "ipfshash"), "should make film");
    }

    function testGetAudienceMembers() public {
        Assert.isTrue(boxOffice.buyTickets.value(3 finney)(0, 2), "should purchase tickets");
        Assert.isTrue(boxOffice.spendTicket(0), "should spend ticket");
        address[] memory members = boxOffice.getAudienceMembers(0);
        Assert.equal(members[0], address(this), "should store audience member");
    }

    function testIsAudienceMember() public {
        Assert.isTrue(boxOffice.buyTickets.value(3 finney)(0, 2), "should purchase tickets");
        Assert.isTrue(boxOffice.spendTicket(0), "should spend ticket");
        Assert.isTrue(boxOffice.isAudienceMember(0, address(this)), "should store audience member");
    }

}

