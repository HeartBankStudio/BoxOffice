pragma solidity ^0.4.24;

import "truffle/Assert.sol";
import "truffle/DeployedAddresses.sol";
import "../contracts/HeartBankToken.sol";
import "../contracts/BoxOffice.sol";

contract TestBoxOffice1 {

    function testMakeFilm1() public {
        HeartBankToken kiitos = new HeartBankToken();
        BoxOffice boxOffice = new BoxOffice(address(kiitos), DeployedAddresses.BoxOfficeOracle());

        uint salesEndTime = now + 28 days;
        uint price = 1 finney;
        uint ticketSupply = 1 ether;
        string memory movieName = "Casablanca";
        string memory ticketSymbol = "CSBC";
        string memory logline = "An American expatriate meets a former lover, with unforeseen complications.";
        string memory poster = "ipfshash";
        string memory trailer = "ipfshash";
        
        Assert.isTrue(kiitos.addAdmin(address(boxOffice)), "should add admin");
        Assert.isTrue(boxOffice.makeFilm(salesEndTime, price, ticketSupply, movieName, ticketSymbol, logline, poster, trailer), "should make film");
        
        address movie;
        address filmmaker;

        (movie, filmmaker, , , , , , , , ) = boxOffice.getFilmSummary(0);

        Assert.isNotZero(movie, "should create movie");
        Assert.equal(filmmaker, address(this), "should store filmmaker");
    }

}