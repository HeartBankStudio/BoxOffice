pragma solidity ^0.4.24;

import "truffle/Assert.sol";
import "truffle/DeployedAddresses.sol";
import "../contracts/HeartBankToken.sol";
import "../contracts/BoxOffice.sol";

contract TestBoxOffice0 {

    uint public initialBalance = 1 ether;
    BoxOffice boxOffice;

    function beforeEach() public {
        HeartBankToken kiitos = new HeartBankToken();
        boxOffice = new BoxOffice(address(kiitos), DeployedAddresses.BoxOfficeOracle());
    }

    function testUpdateFees() public {
        Assert.isTrue(boxOffice.updateFees(3, 2), "should update fees");
    }

    function testReturnExcessPayment() public {
        Assert.isTrue(address(boxOffice).call.value(1 finney)(0x0), "should trigger callback");
        Assert.isTrue(boxOffice.returnExcessPayment(msg.sender, 1 finney), "should return excess payment");
    }

    function testShutDownBoxOffice() public {
        Assert.isTrue(boxOffice.toggleEmergency(), "should toggle emergency state");
        Assert.isTrue(address(boxOffice).call(bytes4(keccak256("shutDownBoxOffice()"))), "should self-destruct");
    }

}